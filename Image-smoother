#include <iostream>
#include <vector>
#include <cmath>

class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int rows = img.size();
        int cols = img[0].size();
        vector<vector<int>> result(rows, vector<int>(cols, 0));

        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                int sum = 0;
                int count = 0;

          
                for (int r = i - 1; r <= i + 1; ++r) {
                    for (int c = j - 1; c <= j + 1; ++c) {
                        if (r >= 0 && r < rows && c >= 0 && c < cols) {
                            sum += img[r][c];
                            count++;
                        }
                    }
                }

                result[i][j] = sum / count; // Compute the average and store
            }
        }

        return result;
    }
};

int main() {
    Solution solution;

    vector<vector<int>> img = {
        {100, 200, 100},
        {200, 50, 200},
        {100, 200, 100}
    };

    vector<vector<int>> smoothed = solution.imageSmoother(img);

    cout << "Smoothed Image:" << endl;
    for (const auto& row : smoothed) {
        for (int cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    return 0;
}
