class Solution {
  public:
    string matrixChainOrder(vector<int> &arr) {
      int n = arr.size();
    vector<vector<int>> dp(n, vector<int>(n, 0));
    vector<vector<string>> s(n, vector<string>(n));

    for (int i = 1; i < n; i++) {
        s[i][i] = string(1, 'A' + i - 1);
    }

    for (int len = 2; len < n; len++) {
        for (int i = 1; i < n - len + 1; i++) {
            int j = i + len - 1;
            dp[i][j] = INT_MAX;

            for (int k = i; k < j; k++) {
                int cost = dp[i][k] + dp[k + 1][j] + arr[i - 1] * arr[k] * arr[j];

                if (cost < dp[i][j]) {
                    dp[i][j] = cost;
                    s[i][j] = "(" + s[i][k] + s[k + 1][j] + ")";
                }
            }
        }
    }

    return s[1][n - 1];
    }
};
